return("WeekDay")
}
return("WeekEnd")
}
dates <- as.Date(activity$date)
str(dates)
lapply(dates,dayType)
dayType <- function(date) {
str(date)
print(weekdays(date))
if (date[1]$wday > 0 && date[1]$wday < 6) {
return("WeekDay")
}
return("WeekEnd")
}
dates <- as.Date(activity$date)
str(dates)
lapply(dates,dayType)
dayType <- function(date) {
weekday <- weekdays(date)
if (weekday == "Saturday" || weekday == "Sunday") {
return("WeekEnd")
}
return("WeekDay")
}
dates <- as.Date(activity$date)
lapply(dates,dayType)
dayType <- function(date) {
weekday <- weekdays(date)
if (weekday == "Saturday" || weekday == "Sunday") {
return("WeekEnd")
}
return("WeekDay")
}
dates <- as.Date(activity$date)
dates$type = sapply(dates,dayType)
dates$type = lapply(dates,dayType)
x <- sapply(dates,dayType)
str(x)
dates <- as.Date(activity$date)
x <- sapply(dates,dayType)
str(x)
activity$daytype <- sapply(dates, dayType)
View(activity)
View(activity)
activity$daytype <- factor(sapply(dates, dayType))
activity[activity$dayType == "WeekEnd",]
activity[activity$dayType == "WeekDay",]
activity[activity$daytype == "WeekDay",]
activity[activity$daytype == "WeekEnd",]
dayType <- function(date) {
weekday <- weekdays(date)
if (weekday == "Saturday" || weekday == "Sunday") {
return("weekend")
}
return("weekday")
}
View(activity)
View(activity)
dayType <- function(date) {
weekday <- weekdays(date)
if (weekday == "Saturday" || weekday == "Sunday") {
return("weekend")
}
return("weekday")
}
activity$daytype <- factor(sapply(dates, dayType))
View(activity)
View(activity)
meanSteps <- aggregate(activity$steps, by=list(activity$hour, activity$daytype), FUN = mean)
View(meanSteps)
View(meanSteps)
activity$daytype <- factor(sapply(as.Date(activity$dates), dayType))
activity$daytype <- factor(sapply(as.Date(activity$date), dayType))
meanSteps <- aggregate(activity$steps, by=list(activity$hour, activity$daytype), FUN = mean)
View(meanSteps)
View(meanSteps)
colnames(meanSteps) <- c("hour", "daytype", "steps")
View(meanSteps)
View(meanSteps)
rows(activity)
activity.rows
nrow(activityData)
activityData <- read.csv("activity.csv", na.strings="NA")
activityData$hour <- as.double(as.integer(activityData$interval / 100 )) + (activityData$interval %% 100) / 60
activityData$date <- as.Date(activityData$date)
activityData$weekday <- weekdays(activityData$date)
activityData <- read.csv("activity.csv", na.strings="NA")
activityData$hour <- as.double(as.integer(activityData$interval / 100 )) + (activityData$interval %% 100) / 60
activityData$date <- as.Date(activityData$date)
newActivity <- activityData
newActivity <- newActivity[newActivity$daytype == "weekend",]
newActivity <- activityData
newActivity$daytype <- factor(sapply(as.Date(newActivity$date), dayType))
rowCnt <- nrow(newActivity)
for(row in 1:rowCnt) {
if(is.na(newActivity$steps[row])) {
}
}
for(row in 1:rowCnt) {
if(is.na(newActivity$steps[row])) {
print(row)
}
}
View(newActivity)
View(newActivity)
for(row in 1:rowCnt) {
if(is.na(newActivity$steps[row])) {
print(row)
print(meanSteps[meanSteps$hour == newActivity$hour[row], meanSteps$daytype == newActivity$daytype[row], "steps"])
}
}
for(row in 1:rowCnt) {
if(is.na(newActivity$steps[row])) {
print(row)
print(meanSteps[meanSteps$hour == newActivity$hour[row] && meanSteps$daytype == newActivity$daytype[row], "steps"])
}
}
for(row in 1:rowCnt) {
if(is.na(newActivity$steps[row])) {
print(row)
hour <- newActivity$hour[row]
print(hour)
print(meanSteps[meanSteps$hour == newActivity$hour[row] && meanSteps$daytype == newActivity$daytype[row], "steps"])
}
}
for(row in 1:rowCnt) {
if(is.na(newActivity$steps[row])) {
print(row)
hour <- newActivity$hour[row]
type <- as.string(newActivity$daytype[row])
print(hour, type)
print(meanSteps[meanSteps$hour == hour && meanSteps$daytype == newActivity$daytype[row], "steps"])
}
}
for(row in 1:rowCnt) {
if(is.na(newActivity$steps[row])) {
print(row)
hour <- newActivity$hour[row]
type <- as.character(newActivity$daytype[row])
print(hour, type)
print(meanSteps[meanSteps$hour == hour && meanSteps$daytype == newActivity$daytype[row], "steps"])
}
}
View(newActivity)
View(newActivity)
for(row in 1:rowCnt) {
if(is.na(newActivity$steps[row])) {
print(row)
hour <- newActivity$hour[row]
type <- as.character(newActivity$daytype[row])
print(hour)
print(type)
print(meanSteps[meanSteps$hour == hour && meanSteps$daytype == newActivity$daytype[row], "steps"])
}
}
for(row in 1:rowCnt) {
if(is.na(newActivity$steps[row])) {
print(row)
hour <- newActivity$hour[row]
type <- as.character(newActivity$daytype[row])
print(hour)
print(type)
print(meanSteps[meanSteps$hour == hour && meanSteps$daytype == as.character(newActivity$daytype[row]), "steps"])
}
}
View(meanSteps)
View(meanSteps)
for(row in 1:rowCnt) {
if(is.na(newActivity$steps[row])) {
print(row)
hour <- newActivity$hour[row]
type <- as.character(newActivity$daytype[row])
print(hour)
print(type)
str(meanSteps[meanSteps$hour == hour && meanSteps$daytype == as.character(newActivity$daytype[row]), "steps"])
}
}
View(meanSteps)
View(meanSteps)
View(newActivity)
View(newActivity)
View(activity)
View(activity)
# create dataset to fill NA values
meanSteps <- aggregate(activity$steps, by=list(activity$interval, activity$daytype), FUN = mean)
colnames(meanSteps) <- c("interval", "daytype", "steps")
for(row in 1:rowCnt) {
if(is.na(newActivity$steps[row])) {
print(row)
interval <- newActivity$interval[row]
type <- as.character(newActivity$daytype[row])
print(interval)
print(type)
str(meanSteps[meanSteps$interval == interval && meanSteps$daytype == as.character(newActivity$daytype[row]), "steps"])
}
}
for(row in 1:rowCnt) {
if(is.na(newActivity$steps[row])) {
print(row)
interval <- newActivity$interval[row]
type <- as.character(newActivity$daytype[row])
print(interval)
print(type)
str(meanSteps[meanSteps$interval == interval && meanSteps$daytype == type, "steps"])
}
}
for(row in 1:rowCnt) {
if(is.na(newActivity$steps[row])) {
print(row)
interval <- newActivity$interval[row]
type <- as.character(newActivity$daytype[row])
print(interval)
print(type)
x <- meanSteps[meanSteps$interval == interval && meanSteps$daytype == type, "steps"]
str(x)
}
}
View(meanSteps)
View(meanSteps)
for(row in 1:rowCnt) {
if(is.na(newActivity$steps[row])) {
print(row)
interval <- newActivity$interval[row]
type <- as.character(newActivity$daytype[row])
print(interval)
print(type)
x <- meanSteps[meanSteps$interval == interval && meanSteps$daytype == type, c("steps")]
str(x)
}
}
for(row in 1:rowCnt) {
if(is.na(newActivity$steps[row])) {
print(row)
interval <- newActivity$interval[row]
type <- as.character(newActivity$daytype[row])
print(interval)
print(type)
x <- meanSteps[meanSteps$interval == interval && meanSteps$daytype == type, ]
str(x)
}
}
for(row in 1:rowCnt) {
if(is.na(newActivity$steps[row])) {
print(row)
interval <- newActivity$interval[row]
type <- as.character(newActivity$daytype[row])
print(interval)
print(type)
x <- meanSteps[meanSteps$interval == interval , ]
str(x)
}
}
for(row in 1:rowCnt) {
if(is.na(newActivity$steps[row])) {
print(row)
interval <- newActivity$interval[row]
type <- as.character(newActivity$daytype[row])
print(interval)
print(type)
x <- meanSteps[meanSteps$interval == interval , "steps"]
str(x)
}
}
for(row in 1:rowCnt) {
if(is.na(newActivity$steps[row])) {
print(row)
interval <- newActivity$interval[row]
type <- as.character(newActivity$daytype[row])
print(interval)
print(type)
x <- meanSteps[(meanSteps$interval == interval && meanSteps$daytype == type), "steps"]
str(x)
}
}
for(row in 1:rowCnt) {
if(is.na(newActivity$steps[row])) {
print(row)
interval <- newActivity$interval[row]
type <- as.character(newActivity$daytype[row])
print(interval)
print(type)
x <- meanSteps[(meanSteps$interval == interval && as.character(meanSteps$daytype) == type), "steps"]
str(x)
}
}
for(row in 1:rowCnt) {
if(is.na(newActivity$steps[row])) {
print(row)
interval <- newActivity$interval[row]
type <- as.character(newActivity$daytype[row])
print(interval)
print(type)
x <- meanSteps[(meanSteps$interval == interval ), "steps"]
str(x)
}
}
for(row in 1:rowCnt) {
if(is.na(newActivity$steps[row])) {
print(row)
interval <- newActivity$interval[row]
type <- as.character(newActivity$daytype[row])
print(interval)
print(type)
x <- meanSteps[(meanSteps$interval == interval ), c("steps", "daytype")]
str(x)
}
}
for(row in 1:rowCnt) {
if(is.na(newActivity$steps[row])) {
print(row)
interval <- newActivity$interval[row]
type <- as.character(newActivity$daytype[row])
print(interval)
print(type)
x <- meanSteps[(meanSteps$interval == interval ), c("steps", "daytype")]
print(x)
}
}
for(row in 1:rowCnt) {
if(is.na(newActivity$steps[row])) {
print(row)
interval <- newActivity$interval[row]
type <- as.character(newActivity$daytype[row])
print(interval)
print(type)
x <- meanSteps[(meanSteps$interval == interval ), c("steps", "daytype")]
print(x)
x <- meanSteps[(meanSteps$daytype == type ), c("steps", "daytype")]
print(x)
}
}
for(row in 1:rowCnt) {
if(is.na(newActivity$steps[row])) {
print(row)
interval <- newActivity$interval[row]
type <- as.character(newActivity$daytype[row])
print(interval)
print(type)
x <- meanSteps[(meanSteps$interval == interval ), c("steps", "daytype")]
print(x)
x <- meanSteps[(meanSteps$interval == interval && meanSteps$daytype == type ), c("steps", "daytype")]
print(x)
}
}
rowCnt <- nrow(newActivity)
for(row in 1:rowCnt) {
if(is.na(newActivity$steps[row])) {
print(row)
interval <- newActivity$interval[row]
type <- as.character(newActivity$daytype[row])
print(interval)
print(type)
x <- meanSteps[(meanSteps$interval == interval) && (meanSteps$daytype == type), c("steps", "daytype")]
print(x)
}
}
for(row in 1:rowCnt) {
if(is.na(newActivity$steps[row])) {
print(row)
interval <- newActivity$interval[row]
type <- as.character(newActivity$daytype[row])
print(interval)
print(type)
x <- meanSteps[((meanSteps$interval == interval) && (meanSteps$daytype == type)), c("steps", "daytype")]
print(x)
}
}
for(row in 1:rowCnt) {
if(is.na(newActivity$steps[row])) {
print(row)
interval <- newActivity$interval[row]
type <- as.character(newActivity$daytype[row])
print(interval)
print(type)
x <- meanSteps[meanSteps$interval == interval & meanSteps$daytype == type, c("steps", "daytype")]
print(x)
}
}
for(row in 1:rowCnt) {
if(is.na(newActivity$steps[row])) {
print(row)
interval <- newActivity$interval[row]
type <- as.character(newActivity$daytype[row])
print(interval)
print(type)
x <- meanSteps[meanSteps$interval == interval & meanSteps$daytype == type, "steps"]
print(x)
}
}
for(row in 1:rowCnt) {
if(is.na(newActivity$steps[row])) {
interval <- newActivity$interval[row]
type <- as.character(newActivity$daytype[row])
newActivity$steps[row] <- as.integer(meanSteps[meanSteps$interval == interval & meanSteps$daytype == type, "steps"] + 0.5)
}
}
View(newActivity)
View(newActivity)
newActivity[is.na(newActivity$steps),]
newTotalPerDay <- aggregate(newActivity$steps, by=list(newActivity$date), FUN=sum)
hist(newTotalPerDay$x, main = paste("Histogram of Number of Steps per Day"), xlab = "Number of Steps per Day")
newMeanPerDay <- aggregate(newActivity$steps, by=list(newActivity$date), FUN=mean)
colnames(newMeanPerDay) = c("date", "mean")
newMedianPerDay <- aggregate(newActivity$steps, by=list(newActivity$date), FUN=median)
colnames(newMedianPerDay) = c("date", "median")
plot(newMeanPerDay$date, newMeanPerDay$mean, type = "s", xlab = "date", ylab = "steps", col='blue')
lines(newMedianPerDay$date, newMedianPerDay$median, type = "s", col = "green")
legend("top", legend = c("mean", "median"), bty = "n", lty = 1, col = c("blue", "green"))
plot(newMeanPerDay$date, newMeanPerDay$mean, type = "s", xlab = "date", ylab = "steps", col='dark blue')
lines(newMedianPerDay$date, newMedianPerDay$median, type = "s", col = "green")
legend("top", legend = c("mean", "median"), bty = "n", lty = 1, col = c("dark blue", "green"))
plot(newMeanPerDay$date, newMeanPerDay$mean, type = "s", xlab = "date", ylab = "steps", col="dark blue")
lines(medianPerDay$date, medianPerDay$median, type = "S", col="blue")
lines(newMedianPerDay$date, newMedianPerDay$median, type = "s", col = "green")
legend("top", legend = c("mean", "original mean", "median"), bty = "n", lty = 1, col = c("dark blue", "blue", "green"))
View(meanSteps)
View(newActivity)
View(newActivity)
View(newActivity)
View(newActivity)
For days that where missing steps\, the median number of steps is much larger.
activityData <- read.csv("activity.csv", na.strings="NA")
activityData$hour <- as.double(as.integer(activityData$interval / 100 )) + (activityData$interval %% 100) / 60
activityData$date <- as.Date(activityData$date)
dayType <- function(date) {
weekday <- weekdays(date)
if (weekday == "Saturday" || weekday == "Sunday") {
return("weekend")
}
return("weekday")
}
# add column daytype
activity$daytype <- factor(sapply(as.Date(activity$date), dayType))
# create dataset to fill NA values
meanSteps <- aggregate(activity$steps, by=list(activity$interval, activity$daytype), FUN = mean)
colnames(meanSteps) <- c("interval", "daytype", "steps")
# copy original dataset
newActivity <- activityData
# fill in NA values
newActivity$daytype <- factor(sapply(as.Date(newActivity$date), dayType))
rowCnt <- nrow(newActivity)
for(row in 1:rowCnt) {
if(is.na(newActivity$steps[row])) {
interval <- newActivity$interval[row]
type <- as.character(newActivity$daytype[row])
newActivity$steps[row] <- as.integer(meanSteps[meanSteps$interval == interval & meanSteps$daytype == type, "steps"] + 0.5)
}
}
activity <- activityData[! is.na(activityData$steps),]
meanSteps <- aggregate(activity$steps, by=list(activity$interval, activity$daytype), FUN = mean)
colnames(meanSteps) <- c("interval", "daytype", "steps")
# copy original dataset
newActivity <- activityData
# fill in NA values
newActivity$daytype <- factor(sapply(as.Date(newActivity$date), dayType))
rowCnt <- nrow(newActivity)
for(row in 1:rowCnt) {
if(is.na(newActivity$steps[row])) {
interval <- newActivity$interval[row]
type <- as.character(newActivity$daytype[row])
newActivity$steps[row] <- as.integer(meanSteps[meanSteps$interval == interval & meanSteps$daytype == type, "steps"] + 0.5)
}
}
meanSteps <- aggregate(activity$steps, by=list(activity$interval, activity$daytype), FUN = mean)
activity$daytype <- factor(sapply(as.Date(activity$date), dayType))
meanSteps <- aggregate(activity$steps, by=list(activity$interval, activity$daytype), FUN = mean)
colnames(meanSteps) <- c("interval", "daytype", "steps")
newActivity <- activityData
# fill in NA values
newActivity$daytype <- factor(sapply(as.Date(newActivity$date), dayType))
rowCnt <- nrow(newActivity)
for(row in 1:rowCnt) {
if(is.na(newActivity$steps[row])) {
interval <- newActivity$interval[row]
type <- as.character(newActivity$daytype[row])
newActivity$steps[row] <- as.integer(meanSteps[meanSteps$interval == interval & meanSteps$daytype == type, "steps"] + 0.5)
}
}
weekdayActivity <- newActivity[newActivity$daytype == "weekday",]
weekdayMeanPerInterval <- aggregate(weekdayActivity$steps, by=list(weekdayActivity$hour), FUN = mean)
colnames(weekdayMeanPerInterval) = c("hour", "steps")
weekendActivity <- newActivity[newActivity$daytype == "weekend",]
weekendMeanPerInterval <- aggregate(weekendActivity$steps, by=list(weekendActivity$hour), FUN = mean)
colnames(weekendMeanPerInterval) = c("hour", "steps")
plot(weekdayMeanPerInterval$hour, weekdayMeanPerInterval$steps, type="s", main = "Average Steps per Interval", xlab = "hour", ylab = "steps per 5 minute interval", col="blue")
lines(weekendMeanPerInterval$hour, weekdayMeanPerInterval$steps, type="s", col="green")
weekdayActivity <- activity[activity$daytype == "weekday",]
weekdayMeanPerInterval <- aggregate(weekdayActivity$steps, by=list(weekdayActivity$hour), FUN = mean)
colnames(weekdayMeanPerInterval) = c("hour", "steps")
weekendActivity <- activity[activity$daytype == "weekend",]
weekendMeanPerInterval <- aggregate(weekendActivity$steps, by=list(weekendActivity$hour), FUN = mean)
colnames(weekendMeanPerInterval) = c("hour", "steps")
plot(weekdayMeanPerInterval$hour, weekdayMeanPerInterval$steps, type="s", main = "Average Steps per Interval", xlab = "hour", ylab = "steps per 5 minute interval", col="blue")
lines(weekendMeanPerInterval$hour, weekdayMeanPerInterval$steps, type="s", col="green")
weekdayActivity <- activity[activity$daytype == "weekday",]
weekdayMeanPerInterval <- aggregate(weekdayActivity$steps, by=list(weekdayActivity$hour), FUN = mean)
colnames(weekdayMeanPerInterval) = c("hour", "steps")
weekendActivity <- activity[activity$daytype == "weekend",]
weekendMeanPerInterval <- aggregate(weekendActivity$steps, by=list(weekendActivity$hour), FUN = mean)
colnames(weekendMeanPerInterval) = c("hour", "steps")
plot(weekdayMeanPerInterval$hour, weekdayMeanPerInterval$steps, type="s", main = "Average Steps per Interval", xlab = "hour", ylab = "steps per 5 minute interval", col="blue")
#lines(weekendMeanPerInterval$hour, weekdayMeanPerInterval$steps, type="s", col="green")
plot(weekdayMeanPerInterval$hour, weekdayMeanPerInterval$steps, type="s", main = "Average Steps per Interval", xlab = "hour", ylab = "steps per 5 minute interval", col="blue")
lines(weekendMeanPerInterval$hour, weekendMeanPerInterval$steps, type="s", col="green")
legend("top", legend = c("weekday", "weekend"), bty = "n", lty = 1, col = c("blue", "green"))
legend("top right", legend = c("weekday", "weekend"), bty = "n", lty = 1, col = c("blue", "green"))
legend("top ight", legend = c("weekday", "weekend"), bty = "n", lty = 1, col = c("blue", "green"))
legend("topright", legend = c("weekday", "weekend"), bty = "n", lty = 1, col = c("blue", "green"))
plot(weekdayMeanPerInterval$hour, weekdayMeanPerInterval$steps, type="s", main = "Average Steps per Interval", xlab = "hour", ylab = "steps per 5 minute interval", col="blue")
lines(weekendMeanPerInterval$hour, weekendMeanPerInterval$steps, type="s", col="green")
legend("topright", legend = c("weekday", "weekend"), bty = "n", lty = 1, col = c("blue", "green"))
